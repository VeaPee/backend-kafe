version: 0.2

env:
  parameter-store:
    MONGO_URI: /MONGO_URI
    NODE_ENV: /NODE_ENV
    JWT_SECRET: /JWT_SECRET
    EMAIL_HOST: /EMAIL_HOST
    EMAIL_USER: /EMAIL_USER
    EMAIL_PASS: /EMAIL_PASS
    PORT: /PORT

phases:
  install:
    commands:
      - printenv > .env
      - echo .env file created
      - echo Entered Install Phase...
      - echo "Contents of .env file:"
      - cat .env
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region ap-southeast-3 | docker login --username AWS --password-stdin 654654290307.dkr.ecr.ap-southeast-3.amazonaws.com
      - REPOSITORY_URI=654654290307.dkr.ecr.ap-southeast-3.amazonaws.com/backend
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - |
        set -e  # Exit on failure
        printf "JWT_SECRET=%s\n" ${JWT_SECRET} > .env
        printf "NODE_ENV=%s\n" ${NODE_ENV}  >> .env
        printf "MONGO_URI=%s\n" ${MONGO_URI}  >> .env
        printf "EMAIL_HOST=%s\n" ${EMAIL_HOST}  >> .env
        printf "EMAIL_USER=%s\n" ${EMAIL_USER}  >> .env
        printf "EMAIL_PASS=%s\n" ${EMAIL_PASS}  >> .env
        printf "PORT=%s\n" ${PORT}  >> .env
        cat .env
        echo .env file created
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"backend","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > backend.json
artifacts:
    files: backend.json